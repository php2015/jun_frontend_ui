<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:tx="http://www.springframework.org/schema/tx" 	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans        
						http://www.springframework.org/schema/beans/spring-beans.xsd        
					http://www.springframework.org/schema/tx
					http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
					http://www.springframework.org/schema/aop
					http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
					http://www.springframework.org/schema/jdbc
					http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd						
					http://www.springframework.org/schema/context
					http://www.springframework.org/schema/context/spring-context-3.0.xsd						
">

<!-- 初始化数据表结构 -->
    <jdbc:initialize-database data-source="dataSource"
        ignore-failures="ALL">
        <jdbc:script location="classpath:database/h2/create-table.sql" />
        <jdbc:script location="classpath:database/h2/import-data.sql" />
    </jdbc:initialize-database>
	<!-- 这个文件主要是用来配置jdbc连接的 -->
	<!--创建jdbc数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc_driverClassName}" />
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		abstract="false" lazy-init="false" autowire="default">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>
	
	<!-- Mybatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/config/mybatis/mybatis.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:/config/mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>	
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jacarrichan.demo.lemur.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>	

	<!-- 事务配置 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 需要事务控制的业务方法配置 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*"     propagation="REQUIRED"      rollback-for="Exception" />
			<tx:method name="addLog"   propagation="REQUIRES_NEW"  rollback-for="Exception" />
			<tx:method name="del*"     propagation="REQUIRED"      rollback-for="Exception" />
			<tx:method name="modify*"  propagation="REQUIRED"	   rollback-for="Exception" />
			<tx:method name="update*"  propagation="REQUIRED"      rollback-for="Exception" />
			<tx:method name="login*"   propagation="REQUIRED"	   rollback-for="Exception" />
			<tx:method name="audit*"   propagation="REQUIRED"	   rollback-for="Exception" />
			<tx:method name="preview*" propagation="REQUIRED"	   rollback-for="Exception" />
			<tx:method name="gen*"     propagation="REQUIRED"	   rollback-for="Exception" />
			<tx:method name="*"        read-only="true" />
		</tx:attributes>
	</tx:advice>
	
</beans>