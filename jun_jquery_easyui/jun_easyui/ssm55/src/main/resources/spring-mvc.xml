<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    
	<!-- 扫描所有的controller 但是不扫描service-->  
	<context:component-scan base-package="com.ssm" use-default-filters="false">  
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />  
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />  
	</context:component-scan> 

	<mvc:annotation-driven/>
	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
	<mvc:default-servlet-handler/>
	
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件  json转换器 
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean> 
	-->

	<!-- 启动Spring MVC 的注解功能,完成请求和注解POJO的映射
	<bean  id="handlerAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />  
			</list>
		</property>
	</bean>
	 -->
	<bean id="multipartResolver"  
	    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	    <property name="defaultEncoding">  
	        <value>UTF-8</value>  
	    </property>  
	    <property name="maxUploadSize">  
	        <value>1048576</value><!-- 上传文件大小限制为1M，1*1024*1024 -->  
	    </property>  
	    <property name="maxInMemorySize">  
	        <value>4096</value>  
	    </property>  
	</bean>	
	
	 <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>-->
	
	 	<!-- FreeMarker视图解析   如返回student。。在这里配置后缀名ftl和视图解析器。。-->
	 <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		  <property name="viewClass" value="com.ssm.common.util.MyFreeMarkerView"></property>
		  <property name="prefix" value=""/>
		  <property name="suffix" value=".html" />
		  <property name="contentType" value="text/html;charset=utf-8" />
		  <property name="exposeRequestAttributes" value="true" />
		  <property name="exposeSessionAttributes" value="true" />
		  <property name="exposeSpringMacroHelpers" value="true" />
		  <property name="requestContextAttribute" value="request"></property>
	 </bean>
	 
	<!-- freemarker的配置 -->
	 <bean id="freemarkerConfig" class="com.ssm.shiro.ShiroTagFreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/views/" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="freemarkerSettings">
		   <props>
			    <prop key="template_update_delay">10</prop>
			    <prop key="locale">zh_CN</prop>
			    <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
			    <prop key="date_format">yyyy-MM-dd</prop>
			    <prop key="number_format">#.##</prop>
		   </props>
		</property>
	 </bean>
	 
	 <!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/management/index"/>
	
	 <!-- 全局异常配置 start -->  
     <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
         <property name="exceptionMappings">  
             <props>
				 <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>      
                 <prop key="java.lang.Throwable">error/500</prop>
             </props>  
         </property>  
         <property name="statusCodes">  
             <props>  
                 <prop key="500">500</prop>  
                 <prop key="404">404</prop>
                 <prop key="403">403</prop>  
             </props>  
         </property>  
         <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->  
         <property name="warnLogCategory" value="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"/>  
         <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->  
         <property name="defaultErrorView" value="error/500"/>  
         <!-- 默认HTTP状态码 ，返回错误默认设置的状态码-->  
         <property name="defaultStatusCode" value="200"/>  
     </bean>  
     <!-- 全局异常配置 end -->    

	<!-- 支持 Shiro对Controller的方法级AOP安全控制 begin-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	<!-- 支持 Shiro对Controller的方法级AOP安全控制 end  -->       	
</beans>
