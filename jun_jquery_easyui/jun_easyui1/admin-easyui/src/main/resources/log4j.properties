### 设定日志级别  ###
log4j.rootLogger=info,stdout,D


### 指定部分包输出级别 ###
log4j.logger.org.springframework=ERROR
log4j.logger.framework=ERROR
log4j.logger.com.alibaba=ERROR
log4j.logger.org.quartz=ERROR
log4j.logger.org.mybatis=ERROR
###mybatis显示SQL语句 ,因为mybatis源码中只输出了debug级别的日志，没有info级别的日志。所以定义info级别没有输出任何信息。
log4j.logger.java.sql.Connection=debug
log4j.logger.java.sql.Statement=debug
log4j.logger.java.sql.PreparedStatement=debug
log4j.logger.java.sql.ResultSet=debug

### 输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern =%-d{yyyy-MM-dd HH:mm:ss} %-5p (%F:%L) %m%n


### 输出到日志文件 ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = ${catalina.base}/logs/admin-easyui/admin-easyui.log
log4j.appender.D.Append = true
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.DatePattern='_'yyyy-MM-dd'.txt' 
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} %-5p (%F:%L) %m%n


