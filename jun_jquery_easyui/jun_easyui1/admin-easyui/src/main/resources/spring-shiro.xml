<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
							http://www.springframework.org/schema/util
							http://www.springframework.org/schema/util/spring-util-4.0.xsd">


	<!-- shiro核心 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<property name="loginUrl" value="/login.html"></property>
		<property name="successUrl" value="/index.html"></property>
		<property name="unauthorizedUrl" value="/page/404.jsp"></property>
		<property name="filters">
			<util:map>
				<!-- 授权级别为user，还原被记住的session -->
				<entry key="user">
					<bean class="com.chensi.handler.MyShiroFilter"></bean>
				</entry>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<!-- 认证过滤器：anon，authcBasic，auchc，user -->
			<!-- 授权过滤器：perms，roles，ssl，rest，port -->
			<!-- !!注意静态文件还需要配置springmvc拦截资源 -->
			<value>
				/**/*.json= anon

				/js/** = anon
				/css/**=anon
				/images/**=anon
				/image/**=anon
				/themes/**=anon
				/static/**=anon
				/page/**=anon
				/uploadFiles/**=anon

				/login.html=anon
				/login.do=anon
				/logout.do=anon
				/checkCaptcha.do=anon
				/captcha=anon
				/upload.do=anon
				/**=user
			</value>
		</property>
	</bean>

	<!-- 核心管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myShiroRealm"></property>
		<property name="cacheManager" ref="shiroCacheManager"></property>
		<property name="rememberMeManager" ref="rememberMeManager"></property>
		<property name="sessionManager" ref="sessionManager"></property>
	</bean>

	<!-- session管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="${shiro.globalSessionTimeout}"></property>
		<property name="sessionDAO" ref="sessionDao"></property>
		<!-- 每隔多久检查一下session有效性 -->
		<!-- <property name="sessionValidationInterval" value="${shiro.sessionValidationInterval}"></property> -->
		<property name="sessionListeners">
			<bean class="com.chensi.handler.MySessionListener"></bean>
		</property>
	</bean>
	<bean id="sessionDao" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO"></bean>
	<!-- <bean id="sessionDao" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"> -->
	<!-- <property name="activeSessionsCacheName" value="shiro-activeSessionCache"></property> -->
	<!-- </bean> -->

	<!-- 缓存 -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"></property>
	</bean>

	<!-- 授权领域 -->
	<bean id="myShiroRealm" class="com.chensi.handler.MyShiroRealm">
		<!-- 对应ehcache中的shiroAuthorizationCache -->
		<property name="authenticationCacheName" value="shiroAuthorizationCache"></property>
	</bean>

	<!-- 会话Cookie模板 -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="${shiro.maxAge}" /><!-- 免登录 -->
	</bean>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>




	<!-- shiro为集成spring,保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- 启用shiro为spring配置的bean注释（启用shrio授权注解拦截方式 ），只运行在lifecycleBeanProcessor之后 ,AOP式方法级权限检查 -->
	<!-- !!!!注意：需要在springmvc启用环绕aop注解，否则注解失效!!!! -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>
